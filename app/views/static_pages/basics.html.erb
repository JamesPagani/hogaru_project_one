<% provide(:title, "REST basics") %>
<h1>REST basics</h1>
<p>REST (<strong>RE</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer) is a software architecture used to develop how an application's client communicates with a server and vice versa. It is mainly used to develop <em>Web Aplication Interface Programs (Web APIs)</em>, and any API that follows this architecture is known as a RESTful API.</p> 

<h2>Resources</h2>
<h3>What is a REST resource?</h3>
<p>In the context of REST, a resource is a description of a web entity, which can be a document, a video, a music file, an image, or any other type of data that can be stored.</p>

<h3>What can you do with a REST resource?</h3>
A REST resource can be manipulated with the basic CRUD (Create, Read, Update, Delete) operations.

<h2>RESTful Routing</h2>
<h3>What is RESTful routing?</h3>
<p>RESTful routing refers to the way we map the access to the resources into coherent and easy to understand URIs (Uniform Resource Identifiers) with the appropiate type(s) of HTTP request type in order to manipulate the resources.</p>
<h3>Actions</h3>
<p>Regardless of the names of the resources and the URIs to reach them, routing in general consist of setting up 4 basic actions:</p>
<ul>
  <li><strong>C</strong>reating new resources.</li>
  <li><strong>R</strong>eading existing resources.</li>
  <li><strong>U</strong>pdating existing resources.</li>
  <li><strong>D</strong>eleting resources.</li>
</ul>
<p>Each of these actions are associated with an HTTP request verb:</p>
<ul>
  <li><strong>Create</strong>: POST</li>
  <li><strong>Read</strong>: GET</li>
  <li><strong>Update</strong>: PATCH</li>
  <li><strong>Delete</strong>: DELETE</li>
</ul>
